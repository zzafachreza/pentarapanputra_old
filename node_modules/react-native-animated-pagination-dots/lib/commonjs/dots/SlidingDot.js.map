{"version":3,"sources":["SlidingDot.tsx"],"names":["SlidingDot","scrollX","data","dotSize","containerStyle","dotStyle","slidingIndicatorStyle","marginHorizontal","width","defaultProps","inputRange","translateX","interpolate","outputRange","height","styles","borderRadius","position","transform","map","_item","index","StyleSheet","create","bottom","flexDirection","alignSelf","backgroundColor","opacity","zIndex","alignItems","justifyContent"],"mappings":";;;;;;;AAAA;;AACA;;;;AAkBA,MAAMA,UAAU,GAAG,CAAC;AAClBC,EAAAA,OADkB;AAElBC,EAAAA,IAFkB;AAGlBC,EAAAA,OAHkB;AAIlBC,EAAAA,cAJkB;AAKlBC,EAAAA,QALkB;AAMlBC,EAAAA,qBANkB;AAOlBC,EAAAA;AAPkB,CAAD,KAQI;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAY,uCAAlB;AAEA,QAAMC,YAAY,GAAG;AACnBN,IAAAA,OAAO,EAAEA,OAAO,IAAI,EADD;AAEnBI,IAAAA,gBAAgB,EAAEA,gBAAgB,IAAI;AAFnB,GAArB;AAIA,QAAMG,UAAU,GAAG,CAAC,CAACF,KAAF,EAAS,CAAT,EAAYA,KAAZ,CAAnB;AACA,QAAMG,UAAU,GAAGV,OAAO,CAACW,WAAR,CAAoB;AACrCF,IAAAA,UADqC;AAErCG,IAAAA,WAAW,EAAE,CACX,CAACJ,YAAY,CAACN,OAAd,GAAwBM,YAAY,CAACF,gBAAb,GAAgC,CAD7C,EAEX,CAFW,EAGXE,YAAY,CAACN,OAAb,GAAuBM,YAAY,CAACF,gBAAb,GAAgC,CAH5C;AAFwB,GAApB,CAAnB;AASA,sBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACL;AAAEO,MAAAA,MAAM,EAAEL,YAAY,CAACN;AAAvB,KADK,EAELY,MAAM,CAACX,cAFF,EAGLA,cAHK;AADT,kBAOE,6BAAC,qBAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACL;AACEI,MAAAA,KAAK,EAAEC,YAAY,CAACN,OADtB;AAEEW,MAAAA,MAAM,EAAEL,YAAY,CAACN,OAFvB;AAGEa,MAAAA,YAAY,EAAEP,YAAY,CAACN,OAAb,GAAuB;AAHvC,KADK,EAMLY,MAAM,CAACT,qBANF,EAOL;AACA;AACEW,MAAAA,QAAQ,EAAE,UADZ;AAEEV,MAAAA,gBAAgB,EAAEA,gBAFpB;AAGEW,MAAAA,SAAS,EAAE,CAAC;AAAEP,QAAAA;AAAF,OAAD;AAHb,KARK,EAaLL,qBAbK;AADT,IAPF,EAwBGJ,IAAI,CAACiB,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,wBACE,6BAAC,iBAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEb,QAAAA,KAAK,EAAEC,YAAY,CAACN,OADtB;AAEEW,QAAAA,MAAM,EAAEL,YAAY,CAACN,OAFvB;AAGEI,QAAAA,gBAAgB,EAAEE,YAAY,CAACF,gBAHjC;AAIES,QAAAA,YAAY,EAAEP,YAAY,CAACN,OAAb,GAAuB;AAJvC,OADK,EAOLY,MAAM,CAACV,QAPF,EAQLA,QARK;AAFT,MADF;AAeD,GAhBA,CAxBH,CADF;AA4CD,CArED;;AAuEA,MAAMU,MAAM,GAAGO,wBAAWC,MAAX,CAAkB;AAC/BnB,EAAAA,cAAc,EAAE;AACda,IAAAA,QAAQ,EAAE,UADI;AAEdO,IAAAA,MAAM,EAAE,EAFM;AAGdC,IAAAA,aAAa,EAAE,KAHD;AAIdC,IAAAA,SAAS,EAAE;AAJG,GADe;AAO/BrB,EAAAA,QAAQ,EAAE;AACRsB,IAAAA,eAAe,EAAE,SADT;AAERC,IAAAA,OAAO,EAAE;AAFD,GAPqB;AAW/BtB,EAAAA,qBAAqB,EAAE;AACrBqB,IAAAA,eAAe,EAAE,SADI;AAErBE,IAAAA,MAAM,EAAE,EAFa;AAGrBC,IAAAA,UAAU,EAAE,QAHS;AAIrBC,IAAAA,cAAc,EAAE,QAJK;AAKrBL,IAAAA,SAAS,EAAE;AALU;AAXQ,CAAlB,CAAf;;eAoBe1B,U","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\nexport interface SlidingDotProps {\n  data: Array<Object>;\n  scrollX: Animated.Value;\n  dotSize?: number;\n  containerStyle?: ViewStyle;\n  dotStyle?: ViewStyle;\n  dotContainerStyle?: ViewStyle;\n  slidingIndicatorStyle?: ViewStyle;\n  marginHorizontal?: number;\n}\n\nconst SlidingDot = ({\n  scrollX,\n  data,\n  dotSize,\n  containerStyle,\n  dotStyle,\n  slidingIndicatorStyle,\n  marginHorizontal,\n}: SlidingDotProps) => {\n  const { width } = useWindowDimensions();\n\n  const defaultProps = {\n    dotSize: dotSize || 12,\n    marginHorizontal: marginHorizontal || 3,\n  };\n  const inputRange = [-width, 0, width];\n  const translateX = scrollX.interpolate({\n    inputRange,\n    outputRange: [\n      -defaultProps.dotSize + defaultProps.marginHorizontal * 2,\n      0,\n      defaultProps.dotSize + defaultProps.marginHorizontal * 2,\n    ],\n  });\n\n  return (\n    <View\n      style={[\n        { height: defaultProps.dotSize },\n        styles.containerStyle,\n        containerStyle,\n      ]}\n    >\n      <Animated.View\n        style={[\n          {\n            width: defaultProps.dotSize,\n            height: defaultProps.dotSize,\n            borderRadius: defaultProps.dotSize / 2,\n          },\n          styles.slidingIndicatorStyle,\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            position: 'absolute',\n            marginHorizontal: marginHorizontal,\n            transform: [{ translateX }],\n          },\n          slidingIndicatorStyle,\n        ]}\n      />\n      {data.map((_item, index) => {\n        return (\n          <View\n            key={index}\n            style={[\n              {\n                width: defaultProps.dotSize,\n                height: defaultProps.dotSize,\n                marginHorizontal: defaultProps.marginHorizontal,\n                borderRadius: defaultProps.dotSize / 2,\n              },\n              styles.dotStyle,\n              dotStyle,\n            ]}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    position: 'absolute',\n    bottom: 30,\n    flexDirection: 'row',\n    alignSelf: 'center',\n  },\n  dotStyle: {\n    backgroundColor: '#347af0',\n    opacity: 0.4,\n  },\n  slidingIndicatorStyle: {\n    backgroundColor: '#347af0',\n    zIndex: 99,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n  },\n});\n\nexport default SlidingDot;\n"]}